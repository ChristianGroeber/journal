<?php
/**
 * This class has been auto-generated by PHP-DI.
 */
class CompiledContainer extends DI\CompiledContainer{
    const METHOD_MAPPING = array (
  'path' => 'get1',
  'Nacho\\Contracts\\DataHandlerInterface' => 'get2',
  'Nacho\\Contracts\\UserHandlerInterface' => 'get3',
  'Nacho\\Contracts\\PageManagerInterface' => 'get4',
  'subEntry1' => 'get5',
  'subEntry2' => 'get6',
  'subEntry3' => 'get7',
  'subEntry4' => 'get8',
  'Nacho\\ORM\\RepositoryManagerInterface' => 'get9',
  'subEntry5' => 'get10',
  'Nacho\\Contracts\\RouteInterface' => 'get11',
  'Nacho\\Contracts\\RequestInterface' => 'get12',
  'Nacho\\Helpers\\ConfigurationContainer' => 'get13',
  'Nacho\\Contracts\\RouteFinderInterface' => 'get14',
  'Nacho\\Security\\UserRepository' => 'get15',
  'Nacho\\Helpers\\MetaHelper' => 'get16',
  'Psr\\Log\\LoggerInterface' => 'get17',
  'subEntry6' => 'get18',
  'logdir' => 'get19',
  'Nacho\\Helpers\\Log\\LogWriterInterface' => 'get20',
  'debug' => 'get21',
  'PixlMint\\CMS\\Helpers\\SecretHelper' => 'get22',
  'Nacho\\Helpers\\PageSecurityHelper' => 'get23',
  'subEntry7' => 'get24',
  'Nacho\\Helpers\\FileHelper' => 'get25',
);

    protected function get1()
    {
        return $this->resolveFactory([
            0 => 'Nacho\\Nacho',
            1 => 'getPath',
        ], 'path');
    }

    protected function get2()
    {
        $object = new Nacho\Helpers\DataHandler();
        return $object;
    }

    protected function get3()
    {
        $object = new PixlMint\CMS\Helpers\CustomUserHelper();
        return $object;
    }

    protected function get5()
    {
        return $this->delegateContainer->get('Nacho\\Helpers\\MetaHelper');
    }

    protected function get6()
    {
        return $this->delegateContainer->get('Nacho\\Helpers\\PageSecurityHelper');
    }

    protected function get7()
    {
        return $this->delegateContainer->get('Nacho\\Helpers\\FileHelper');
    }

    protected function get8()
    {
        return $this->delegateContainer->get('Nacho\\Contracts\\UserHandlerInterface');
    }

    protected function get4()
    {
        $object = new Nacho\Helpers\PageManager($this->get5(), $this->get6(), $this->get7(), $this->get8());
        return $object;
    }

    protected function get10()
    {
        return $this->delegateContainer->get('Nacho\\Contracts\\DataHandlerInterface');
    }

    protected function get9()
    {
        $object = new Nacho\ORM\RepositoryManager($this->get10());
        return $object;
    }

    protected function get11()
    {
        return $this->resolveFactory(static function (\DI\Container $c) {
                $finder = $c->get(\Nacho\Contracts\RouteFinderInterface::class);
                return $finder->getRoute($c->get('path'));
            }, 'Nacho\\Contracts\\RouteInterface');
    }

    protected function get12()
    {
        return $this->resolveFactory(static function (\DI\Container $c) {
                $request = $c->get(\Nacho\Models\Request::class);
                $route = $c->get(\Nacho\Contracts\RouteInterface::class);
                $request->setRoute($route);
                return $request;
            }, 'Nacho\\Contracts\\RequestInterface');
    }

    protected function get13()
    {
        $object = new Nacho\Helpers\ConfigurationContainer();
        return $object;
    }

    protected function get14()
    {
        $object = new Nacho\Helpers\RouteFinder();
        return $object;
    }

    protected function get15()
    {
        $object = new Nacho\Security\UserRepository();
        return $object;
    }

    protected function get16()
    {
        $object = new Nacho\Helpers\MetaHelper();
        return $object;
    }

    protected function get18()
    {
        return $this->delegateContainer->get('Nacho\\Helpers\\Log\\LogWriterInterface');
    }

    protected function get17()
    {
        $object = new Nacho\Helpers\Log\Logger($this->get18(), '{date}	{level}	{message}', 'Y-m-d H:i:s');
        return $object;
    }

    protected function get19()
    {
        return '/var/www/html/var/log';
    }

    protected function get20()
    {
        return $this->resolveFactory(static function (\DI\Container $c) {
                $logDir = $c->get('logdir');
                if (!is_dir($logDir)) {
                    mkdir($logDir, 0777, true);
                }
                $utc = new \DateTimeZone('UTC');
                $date = new \DateTime('now', $utc);
                $logDir .= DIRECTORY_SEPARATOR . $date->format('Y-m-d') . '.log';
                return new \Nacho\Helpers\Log\FileLogWriter($logDir);
            }, 'Nacho\\Helpers\\Log\\LogWriterInterface');
    }

    protected function get21()
    {
        return false;
    }

    protected function get22()
    {
        $object = new PixlMint\CMS\Helpers\SecretHelper();
        return $object;
    }

    protected function get24()
    {
        return $this->delegateContainer->get('Nacho\\Contracts\\UserHandlerInterface');
    }

    protected function get23()
    {
        $object = new Nacho\Helpers\PageSecurityHelper($this->get24());
        return $object;
    }

    protected function get25()
    {
        $object = new Nacho\Helpers\FileHelper();
        return $object;
    }

}
